// Import copryght
@import "_importAll";

/* General */
html {
	height: 100%;
    min-width: 500px;
    overflow: visible;
}

body {
	position:relative;
	height:100%;
	color:#000;
	background:#ababb1;
    font: $font-standart;
}

.wrapper {
	position:relative;
    margin: $blockcenter;
	z-index: 10001; 
	display:block;
    padding: 40px;
    text-align: center;
}

a * {
	cursor:pointer;
}

//Animation
/* general animation */
*{
	-webkit-transition:all .3s;
	   -moz-transition:all .3s;
	     -o-transition:all .3s;
	        transition:all .3s;
}

*:before,*:after{
	-webkit-box-sizing:border-box;
	   -moz-box-sizing:border-box;
	        box-sizing:border-box;
}

//Nav - nested rules 
/* Nav */
.nav {
    text-align: center;

    ul {
        list-style: none;
        background-color: #2a2525;

      li {
        padding: 20px 0;
        display: inline-block; 

        a {
            text-decoration: underline;
            text-transform: uppercase;
            font: $font20;
            color: white;
            padding: 20px 40px;
             &:hover {
                color: black;
                background-color: #fff;
                text-decoration: none;
            }
        }        

      }

    }   
}

/* Content */
h1 {
    font: $font36;
    color: $cool-red;
    text-align: center;
}

div .container {
    display: block;
    font: $font20;
    background: #ffffff;
    box-shadow: $box-shadow;
    margin: 20px 0;
    padding: 40px 40px;
    border: 3px solid #cfcfcf;
        @include border-radius(10px);
    
}

div .container p {
    margin-top: 20px;
    margin-bottom: 20px;
    text-transform: uppercase;
}

.btn {
    display:block;
    text-align: center;
    width: 200px;
    height: 30px;
    padding: 10px;
    color: $cool-yellow;
    background-color: blue;
    margin: $blockcenter;
    cursor: pointer;
        @include border-radius(10px);
    
    &:hover {
        background-color: yellow;
        color: $cool-red;
        text-transform: uppercase;
    }
}

//use mixin
@mixin square($size, $color) {
    width: $size;
    height: $size;
    background-color: $color;
}

.small-blue-square {
    @include square(120px, rgb(0,250,45));
}

//use extend
.dialog-button {
    box-sizing: border-box;
    color: #ffffff;
    box-shadow: 0 1px 1px 0 rgba(0, 0, 0, 0.12);
    padding: 12px 40px;
    cursor: pointer;
}

.confirm {
    @extend .dialog-button;
    background-color: #87bae1;
}

.cancel {
    @extend .dialog-button;
    margin-left: 20px;
    background-color: #e4749e;
}

.dialog-button:hover {
     box-shadow: 0 0 15px 5px rgba(0, 0, 100, 0.3);    
}


/* Variable Arguments */
@mixin colors($text, $background, $border) {
  color: $text;
  background-color: $background;
  border-color: $border;
}

$values: #ff0000, #00ff00, #0000ff;
.primary {
  @include colors($values...);
}

$value-map: (text: #00ff00, background: #0000ff, border: #ff0000);
.secondary {
  @include colors($value-map...);
}

$value-map2: (text: #00ff00, background: #ff00ff, border: #ff0000);
.third {
  @include colors($value-map2...);
}


/* Footer */
footer {
    text-align: center;

    ul {
        list-style: none;
        background-color: #6f6767;

      li {
        padding: 40px;
        display: inline-block; 

        a {
            text-decoration: none;
            text-transform: uppercase;
            font-size: 14px;
            color: white;
        }

        a:hover {
            text-decoration: underline;
            color: black;
        }

      }

    } 
    
    .footer-bottom {
        background-color: #413c3c; 
        padding: 30px;
        
        p {
            text-decoration: none;
            font: $font20;
            color:beige;
        }
    }
}

//---------------------------------------------------
/*---------------------------------------------------*/


/* Variable Scope and Content Blocks */
$color: white;

@mixin colors($color: blue) {
  @content;
}

.colors {
  @include colors { color: $color;}
}


//Function Directives
/* Function Directives */

$grid-width: 40px;
$gutter-width: 10px;

@function grid-width($n) {
  @return $n * $grid-width + ($n - 1) * $gutter-width;
}

#sidebar { width: grid-width(5); }

